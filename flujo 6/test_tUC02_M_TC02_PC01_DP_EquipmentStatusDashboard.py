# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTC02MPC04DPEntitySelectionleftslider():
  def setup_method(self, method):
    self.driver = webdriver.Chrome('chromedriver.exe')
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_tC02MPC04DPEntitySelectionleftslider(self):
    # Test name: TC02_M_PC04_DP_Entity Selection left slider
    # 1 abrir pagina en la que se va a testear
    self.driver.get("https://09384038:ARbg95917284.@meswebgsftmexicali.azure.intra.pepsico.com/Thingworx/Runtime/index.html#master=PepsiCo_Master&mashup=MES_Dashboard&__applyThemeName=PepsiCo%20Default%20Theme&_refreshTS=1670527225809")
    
    # 2 espero a que cargue
    time.sleep(8)
    
    # 3 click en menu hamburguesa
    self.driver.find_element(By.XPATH,'//*[@id="flexcontainer-103-expand-btn"]').click()
    time.sleep(1)
    
    # 4 click en el menu dropdown
    self.driver.find_element(By.XPATH, '//*[@id="root_pagemashupcontainer-6_ContainedMashup-105_ptcsdropdown-100"]').click()
    time.sleep(1)

    # 5 click en el separtamento de tortillas
    tortillasJSPath='document.querySelector("#root_pagemashupcontainer-6_ContainedMashup-105_ptcsdropdown-100-external-wc").shadowRoot.querySelector("#chunker > div > div > ptcs-list-item:nth-child(2)")'
    self.driver.execute_script(f'return {tortillasJSPath}').click()

    # 6 click en el area de packaging
    self.driver.find_element(By.XPATH, '//body[1]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[3]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[3]/div[1]/div[1]/ptcs-button[1]').click()
    time.sleep(2)

    # 7 click en opcion de KPIs de eficiencia
    # self.driver.find_element(By.XPATH, '//body[1]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/div[3]/div[1]/div[3]/div[1]/div[1]/ptcs-button[1]')
    kpiNEJSPath='document.querySelector("#root_pagemashupcontainer-6_ptcsbutton-24")'
    self.driver.execute_script(f'return {kpiNEJSPath}').click()
    time.sleep(2)

    # 8 click en NE
    jspathNE='document.querySelector("#root_pagemashupcontainer-6_navigationfunction-211-popup_ptcsbutton-1-bounding-box")'
    self.driver.execute_script(f'return {jspathNE}').click()
    # self.driver.find_element(By.XPATH, '//body[1]/div[9]/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[1]')
    time.sleep(3)

    # 9 click en opcion de KPIs de tiempo
    self.driver.find_element(By.XPATH,'//body[1]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/div[3]/div[1]/div[3]/div[1]/div[3]/ptcs-button[1]').click()
    time.sleep(5)

    # click en opcion de custom date range
    # customDateRangeJSPath='document.querySelector("#root_pagemashupcontainer-6_navigationfunction-213-popup_ptcstabset-126").shadowRoot.querySelector("ptcs-tabs > ptcs-tab:nth-child(6) > ptcs-label")'
    # self.driver.execute_script(f'return {customDateRangeJSPath}').click()

    # 10 click en el boton de pepsi weeks
    pepsiWeeksJSPath='document.querySelector("#root_pagemashupcontainer-6_navigationfunction-213-popup_ptcstabset-126").shadowRoot.querySelector("ptcs-tabs > ptcs-tab:nth-child(4) > ptcs-label")'
    self.driver.execute_script(f'return {pepsiWeeksJSPath}').click()
    time.sleep(5)

    # 11 click en el dropdown de pepsi weeks
    dropdownPepsiWeeksJSPath='document.querySelector("#root_pagemashupcontainer-6_navigationfunction-213-popup_ptcsdropdown-135").shadowRoot.querySelector("#select")'
    self.driver.execute_script(f'return {dropdownPepsiWeeksJSPath}').click()
    time.sleep(2)

    # 12 click en la ultima opcion de la lista

    ## variable para iterar sobre las opciones de la lista
    elementoLista=1
    ## variable que almacena el path de la opcion de la lista
    lastOptionJSPath=f'document.querySelector("#root_pagemashupcontainer-6_navigationfunction-213-popup_ptcsdropdown-135-external-wc").shadowRoot.querySelector("#chunker > div > div > ptcs-list-item:nth-child({elementoLista}) > ptcs-div > ptcs-label").shadowRoot.querySelector("#label")'
    ## variable que almacena el texto de la opcion de la lista
    opcion=self.driver.execute_script(f'return {lastOptionJSPath}').text

    ## iterar sobre las opciones de la lista hasta que se encuentre la ultima
    try:
      while len(opcion)>0:
        print(opcion)
        print(elementoLista)
        elementoLista+=1
        lastOptionJSPath=f'document.querySelector("#root_pagemashupcontainer-6_navigationfunction-213-popup_ptcsdropdown-135-external-wc").shadowRoot.querySelector("#chunker > div > div > ptcs-list-item:nth-child({elementoLista}) > ptcs-div > ptcs-label").shadowRoot.querySelector("#label")'
        opcion=self.driver.execute_script(f'return {lastOptionJSPath}').text
    except:
      pass
    ## click en la ultima opcion de la lista
    elementoLista-=2
    lastOptionJSPath=f'document.querySelector("#root_pagemashupcontainer-6_navigationfunction-213-popup_ptcsdropdown-135-external-wc").shadowRoot.querySelector("#chunker > div > div > ptcs-list-item:nth-child({elementoLista}) > ptcs-div")'
    self.driver.execute_script(f'return {lastOptionJSPath}').click()
    time.sleep(3)

    # 13 click en el boton de submit para aplicar los cambios
    submitJSPath='document.querySelector("#root_pagemashupcontainer-6_navigationfunction-213-popup_ptcsbutton-66")'
    self.driver.execute_script(f'return {submitJSPath}').click()
    time.sleep(10)
    
    # 14 RECORRER LA TABLA Y GUARDARLA EN UN ARCHIVO CSV
    ## variable que almacena el path de las filas de la tabla
    rowsXPATH='//*[@id="root_pagemashupcontainer-6_ContainedMashup-13_ContainedMashup-75_mashupcontainer-5_gridadvanced-109-grid-advanced"]/div[2]/table/tbody/tr'
    ## variable que almacena el path de las columnas de la tabla
    columnsXPATH='//*[@id="root_pagemashupcontainer-6_ContainedMashup-13_ContainedMashup-75_mashupcontainer-5_gridadvanced-109-grid-advanced"]/div[2]/table/tbody/tr[3]/td'
    
    ## obtener el length de las filas de la tabla
    rows=len(self.driver.find_elements(By.XPATH, rowsXPATH))
    ## obtener el length de las columnas de la tabla
    columnas=len(self.driver.find_elements(By.XPATH, columnsXPATH))
    ## crear un archivo csv
    f= open('dashboardPepsiWeek.csv','w')
    f.close()
    print('se crea el archivo csv')
    file=open('dashboardPepsiWeek.csv','a')
    mensaje=''
    ## escribir los encabezados de la tabla en el archivo csv
    
    for c in range(1,columnas+1):
      print('entro al for de los enunciados')
      ## obtener el path del enunciado de la columna
      columnaTitleXPATH='//body[1]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/ptcs-tab-set[1]/ptcs-mb-container[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/div[2]/div[1]/div[1]/div[1]/div[3]/div[2]/div[1]/table[1]/tbody[1]/tr[2]/td['+str(c)+']/div[1]'
      ## obtener el texto del enunciado de la columna
      columnTitle=self.driver.find_element(By.XPATH,columnaTitleXPATH).text
      print(columnTitle)
      ## agregarlo a la variable mensaje
      mensaje=mensaje+columnTitle+';'
    ## escribir el enunciado de la columna en el archivo csv
    file.write(mensaje+'\n')
    # print('se escriben los encabezados de la tabla')
    mensaje=''
    ## iterar sobre las filas de la tabla
    for row in range(2,rows+1):
      print('entro al for de lo datos filas',row)
      ## iterar sobre las columnas de la tabla
      for c in range(1,columnas+1):
        print('entro al for de la columnas datos',c)
        ## obtener el path de la celda de la tabla
        cellXPATH='//body[1]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[3]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/ptcs-tab-set[1]/ptcs-mb-container[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/div[2]/div[1]/div[1]/div[1]/div[3]/div[2]/div[2]/table[1]/tbody[1]/tr['+str(row)+']/td['+str(c)+']'
        ## obtener el texto de la celda de la tabla
        cell=self.driver.find_element(By.XPATH,cellXPATH).text
        ## agregarlo a la variable mensaje
        mensaje=mensaje+cell+';'
      ## escribir la fila de la tabla en el archivo csv
      print(mensaje)
      file.write(mensaje+'\n')
      mensaje=''
    file.close()
      






if __name__=='__main__':
  pytest.main()